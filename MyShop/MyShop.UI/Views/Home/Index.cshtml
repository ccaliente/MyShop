@model MyShop.Core.ViewModels.ProductListViewModel
@using PagedList.Mvc;
@using PagedList;
@using MyShop.Core.ViewModels
@{
    ViewBag.Title = "Home Page";
}
@section Scripts
{
    <script>
        $(document).ready(function () {
            $('.noUi-handle').on('click', function () {
                $(this).width(50);
            });
            var rangeSlider = document.getElementById('slider-range');
            var moneyFormat = wNumb({
                decimals: 0,
                thousand: ','
                //prefix: 'lv'
            });
            noUiSlider.create(rangeSlider, {
                start: [@ViewBag.Min, @ViewBag.Max],
                step: 1,
                range: {
                    'min': [@ViewBag.Min],
                    'max': [@ViewBag.Max]
                },
                format: moneyFormat,
                connect: true
            });
            rangeSlider.noUiSlider.on('update', function (values, handle) {
            document.getElementById('slider-range-value1').innerHTML = values[0];
            document.getElementById('slider-range-value2').innerHTML = values[1];
            document.getElementsByName('min-value').value = moneyFormat.from(
                values[0]);
            document.getElementsByName('max-value').value = moneyFormat.from(
                values[1]);

            var minPrice = document.getElementById('slider-range-value1').innerHTML;
            var maxPrice = document.getElementById('slider-range-value2').innerHTML;
                console.log(minPrice);
                console.log(maxPrice);
            GetData(minPrice, maxPrice);

        });
        });

        function GetData(minPrice, maxPrice) {
             $.ajax({
                 url: '@Url.Action("FilterProducts", "Home")',
                 data: {
                     minPrice: minPrice,
                     maxPrice: maxPrice
                 }
             })
             .done(function (result) {
                  $('#tableContainer').html(result);
             })
             .fail(function (XMLHttpRequest, textStatus, errorThrown)
            {
                alert("FAIL");
            });
        }
    </script>
    <script src="~/Content/Slider.js"></script>
}

@*/////////////////////////////*@
<div class="col-md-12" style="background-color: white; padding-top: 20px; padding-bottom: 20px; border-radius: 3px;">
    <div class="col-md-2">
        <h4>Filter By Category</h4>
        <div class="list-group">
            @Html.ActionLink("All", "Index", null, new { @class = Request["Category"] == null ? "list-group-item active" : "list-group-item" })
            @foreach (var cat in Model.ProductCategories)
            {
                @Html.ActionLink(cat.Category, "Index", new { Category = cat.Category }, new { @class = Request["Category"] == cat.Category ? "list-group-item active" : "list-group-item" })
            }
        </div>

        <h4>Filter By Rating</h4>
        <div class="col-md-12" style="border: solid thin #dddddd; border-radius: 3px;">
        </div>

        <h4>Filter By Price Range</h4>
        <div class="col-md-12" style="border: solid thin #dddddd; border-radius: 3px;">
            <div class="col-md-12 container1">
                <div class="row">
                    <div class="col-sm-12">
                        <div id="slider-range"></div>
                    </div>
                </div>
                <div class="row slider-labels">
                    <div class="col-xs-6 caption">
                        @*<strong>Min:</strong>*@
                        <span id="slider-range-value1"></span>
                    </div>
                    <div class="col-xs-6 text-right caption">
                        @*<strong>Max:</strong>*@
                        <span id="slider-range-value2"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <form>
                            <input type="hidden" name="min-value" value="">
                            <input type="hidden" name="max-value" value="">
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-10" style="padding-top: 10px; padding-bottom: 10px;">
        <div class="col-md-12">
            @using (Html.BeginForm("Index", "Home", FormMethod.Get, new { id = "pageSizeForm" }))
            {
                @*<div class="col-md-2 col-sm-12">
                        @Html.Label("Elements in page")
                    </div>
                    <div class="col-md-2 col-sm-12">
                        @Html.DropDownList("pageSize")
                    </div>*@

                <div class="col-md-11 col-sm-12">
                    @Html.TextBox("Search", ViewBag.FilterValue as string, new { @class = "form-control" })
                </div>
                <div class="col-md-1 col-sm-12">
                    @*<input type="submit" value="Search" />*@
                    <button type="submit" class="btn btn-primary" value="Search"><span class="glyphicon glyphicon-search"></span></button>
                </div>
            }
        </div>
        <div class="col-md-12">
            <hr />
            @if (Model.Products.Count() == 0)
            {
                <h2 style="text-align: center;">No records found!!!</h2>
            }
        </div>
        <div class="col-md-11" id="tableContainer">
            @{
                var filterProdViewModel = new FilterProductsViewModel();
                filterProdViewModel.Products = Model.Products;
                Html.RenderPartial("FilterProducts", filterProdViewModel);
             }
            @*@foreach (var item in Model.Products)
            {

                <div class="card col-md-3" style="height:400px; margin: 15px; padding: 10px; border: solid thin whitesmoke">
                    <img class="card-img-top" style=" max-width:100%; height:200px;" src="~/Content/ProductImages/@item.Image" />
                    <div class="card-body">
                        <h5 class="card-title"><strong>@Html.ActionLink(item.Name, "Details", new { Id = item.Id })</strong></h5>
                        <p class="card-text"><h4>@item.Price</h4></p>
                        <a href="@Url.Action("AddToBasket", "Basket", new{Id=item.Id})" class="btn btn-primary">Add To Basket</a>
                    </div>
                </div>
            }
            <div class="col-md-12">
                Page: @(Model.Products.PageCount < Model.Products.PageNumber ? 0 : Model.Products.PageNumber)/@Model.Products.PageCount

                @Html.PagedListPager(Model.Products, page => Url.Action("Index",
                new { page, pageSize = ViewBag.psize }))
            </div>*@
        </div>
    </div>
</div>
