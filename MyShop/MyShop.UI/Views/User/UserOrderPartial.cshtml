@model IEnumerable<MyShop.Core.Models.Order>

<h2>Orders</h2>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderStatus)
        </th>
        <th>
            Total
        </th>
        <th></th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Id)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CreatedAt)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.OrderStatus)
    </td>
    <td>
        @{
           Html.RenderAction("OrderSummary", "User", new { Id = item.Id });
        }
    </td>
    <td>
        <a class="btn btn-success" onclick="Details('@item.Id')" style="margin-right: 12px"><span class="glyphicon glyphicon-list-alt"></span>Details</a>
    </td>
    <td>
        <a class="btn btn-danger" onclick="Delete('@item.Id')" style="margin-right: 12px"><span class="glyphicon glyphicon-trash"></span>Cancel Order</a>
    </td>
</tr>
}

</table>
<script>
    function Delete(id) {
            if (confirm("Are you really want to cancel this order?"))
            {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Delete","User")',
                    data: { Id: id },
                    success: function (response) {
                        if (response == "success") {
                            alert("Order cancellated successfully");
                            location.reload();
                        }
                        else {
                            alert("You cannot cancellate order because it is shipped");
                            location.reload();
                        }

                    }
                });
            }
        }
</script>